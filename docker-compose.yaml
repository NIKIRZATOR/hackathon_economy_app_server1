version: '3.5'

# 6200 data
# 6201 - db_data

services:

  data:
    restart: on-failure
    build: ./data
    container_name: data
    environment:
      - SECRET_KEY=SECRET_KEY
      - PORT=6200
      - DB_USERNAME=admin
      - DB_PASSWORD=root
      - DB_HOST=db_data_hack
      - DB_PORT=6201
      - DB_NAME=postgres
    depends_on:
      - db_data_hack
    networks:
      - internal_net
    volumes:
      - data_vol:/app/migrations

  db_data_hack:
    restart: on-failure
    container_name: db_data_hack
    ports:
      - "6201:6201"
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=admin
    image: postgres:14.3-alpine
    command:
      - "postgres"
      - "-c"
      - "port=6201"
    volumes:
      - db_data_hack_vol:/var/lib/postgresql/data
    networks:
      - internal_net
  
  nginx:
    restart: on-failure
    container_name: nginx
    image: nginx:1.23.1-alpine
    networks:
      - internal_net
    ports:
      - 80:80
    depends_on:
      - data
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf

  frontend:
    restart: on-failure
    build: ./build  # Путь к Dockerfile для фронтенда
    container_name: frontend
    ports:
      - "6600:80"  # Открываем порт 6600 для сайта
    networks:
      - internal_net
    depends_on:
      - data
    volumes:
      - ./build/web:/app  # Монтируем директорию с веб-файлами

volumes:
  db_data_hack_vol: {}
  data_vol: {}

networks:
  internal_net:
    driver: bridge